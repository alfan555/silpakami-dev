<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Pentest;
use Sentinel;
use Yajra\Datatables\Datatables;
use Carbon\Carbon;

class pentestController extends Controller
{
    public function index()
    {

        return view('user.pentest');
    }

    public function insert(Request $request)
    {

        $validator = $this->validate($request, [
            'files.*' => 'required|mimes:pdf',

        ]);
        $id = Sentinel::getUser()->id;

        try {
            if ($request->hasfile('files')) {
                $file = $request->file('files');
                $name = md5(time() . rand()) . '.' . $file->extension();
                $file->move(public_path() . '/doc/pentest/', $name);
                $insert = new Pentest;
                $insert->user_id = $id;
                $insert->path = "/doc/pentest/" . $name;
                $insert->stat = "1";
                $insert->nama_aplikasi = $request->nama_aplikasi;
                $insert->tipe_aplikasi = $request->tipe_aplikasi;
                $insert->url = $request->url;
                $insert->deskripsi = $request->deskripsi;
                $insert->penanggung_jawab = $request->penanggung_jawab;
                $insert->no_kontak = $request->no_kontak;

                $insert->save();
                return redirect()
                    ->back()
                    ->withSuccess(sprintf('Terimakasih %s pengajuan layanan Pentest berhasil terkirim, kami akan segera menghubungi anda', $request->nama));
            }
            return redirect()->back()->with(['error' => "Gagal."]);
        } catch (QueryException $e) {
            return redirect()->back()->with(['error' => "Gagal."]);
        }
    }

    public function getData()
    {
        $skpdid = Sentinel::getUser()->instansi_id;
        $users = Pentest::join('users', 'users.id', '=', 'pentests.user_id')
            ->select([
                'pentests.id',
                'nama_aplikasi',
                'stat',
                'pentests.created_at',
                'users.nama',
                'tgl_kick_off',
                'tgl_end_date'
            ])
            ->where('instansi_id', $skpdid)
            ->orderBy('created_at', 'DESC');

        return Datatables::of($users)
            ->addColumn('action', function ($user) {
                if ($user->stat == '1') {
                    return '<a href="" data-bs-toggle="modal" data-bs-target="#cancle" id="bcancel" class="btn btn-outline-danger" data-id="' . $user->id . '">Batal</a>';
                } else {
                    return '';
                }
            })
            ->addColumn('estimasi', function ($user) {
                if ($user->stat == '2') {
                    return $user->tgl_kick_off . ' s/d ' . $user->tgl_end_date;
                } elseif ($user->stat == '5') {
                    return 'Selesai';
                } else {
                    return 'Belum Tersedia';
                }
            })
            ->editColumn('status', function ($stat) {
                if ($stat->stat == '1') {
                    return '<span class="badge bg-primary">Menunggu</span>';
                } elseif ($stat->stat == '2') {
                    return '<span class="badge bg-success">Diproses</span>';
                } elseif ($stat->stat == '3') {
                    return '<span class="badge bg-warning">Dibatalkan</span>';
                } elseif ($stat->stat == '4') {
                    return '<span class="badge bg-danger">Ditolak</span>';
                } elseif ($stat->stat == '5') {
                    return '<span class="badge bg-info">Selesai</span>';
                }
            })
            ->rawColumns(['id', 'status', 'action'])
            ->addIndexColumn()
            ->make(true);
    }

    public function cancel(Request $request)
    {
        $id = $request->idcancel;
        $unit = Pentest::where('id', $id)->update([
            'stat' => "3"
        ]);
        try {
            return redirect()
                ->back()
                ->withSuccess(sprintf('Pengajuan Anda Telah Dibatalkan'));
        } catch (QueryException $e) {
            return redirect()->back()->with(['error' => "Gagal."]);
        }
    }
}
